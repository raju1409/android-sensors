spring.application.name=instant-loan-api-gateway
eureka.client.serviceUrl.defaultZone=${EUREKA_URI:http://clayton.tech:astro2019@localhost:8761/eureka}
server.port=8084

spring.main.allow-bean-definition-overriding=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

ribbon.ReadTimeout=60000
security.oauth2.client.access-token-uri=http://localhost:8080/auth-server/oauth/token
security.oauth2.client.user-authorization-uri=http://localhost:8080/auth-server/oauth/authorize

#security.oauth2.client.client-id=mobile
security.oauth2.resource.user-info-uri=http://localhost:9090/rest/me
#security.oauth2.authorization.check-token-access=permitAll()

swagger.enabled=true
security.oauth2.client.scope=read, write
security.oauth2.client.auto-approve-scopes=.*

auth-server.protocol=http
auth-server.hostname=localhost
auth-server.port=8080

spring.cloud.config.uri=http://localhost:8888
#components.securitySchemes.oAuth2Password.type=oauth2
#components.securitySchemes.oAuth2Password.description=oauth2

#components.securitySchemes.oAuth2Password.flows.password.tokenUrl=/oauth/token
#components.securitySchemes.oAuth2Password.flows.password.authorizationUrl=/oauth/authorize
#components.securitySchemes.oAuth2Password.flows.password.scopes.read=Grant

#components.securitySchemes.oAuth2Password.flows.password.scopes.write=Grant
#components.securitySchemes.oAuth2Password.flows.password.scopes.profile=Grant
spring.servlet.multipart.max-file-size=100000000KB
spring.servlet.multipart.max-request-size=100000000KB
